version: '3'
services:

  nginx:
    build: requirements/nginx/
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "~/Desktop/inception/website:/var/www/html"
    depends_on:
      - wordpress
    networks:
      - frontend
    restart: always

  wordpress:
    build: requirements/wordpress/
    container_name: wordpress
    ports:
      - "9000:9000"
    volumes:
      - "~/Desktop/inception/website:/var/www/html"
    depends_on:
      - mariadb
      - redis
    networks:
      - frontend
      - backend
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DOMAIN_NAME: ${DOMAIN_NAME}
      WP_NAME: ${WP_NAME}
      WP_ADMIN: ${WP_ADMIN}
      WP_ADMIN_PASS: ${WP_ADMIN_PASS}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_USER: ${WP_USER}
      WP_USER_PASS: ${WP_USER_PASS}
      WP_USER_EMAIL: ${WP_USER_EMAIL}
      REDIS_HOST: ${REDIS_HOST}

  mariadb:
    build: requirements/mariadb/
    container_name: mariadb
    ports:
      - "3306:3306"
    volumes:
      - "~/Desktop/inception/mariadb:/var/lib/mysql"
    networks:
      - backend
    restart: always
    environment:
      DB_ROOT: ${DB_ROOT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    
  redis:
    build: requirements/bonus/redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    restart: always

  vsftpd:
    build: requirements/bonus/vsftpd
    container_name: vsftpd
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    volumes:
      - "~/Desktop/inception/website:/var/www/html/"
    networks:
      - backend
    restart: always
    environment:
      FTP_USER: ${FTP_USER}
      FTP_PASS: ${FTP_PASS}

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    security_opt:
      - no-new-privileges:true
    restart: always

#Creation de notre nom de docker-network pour y acceder (il fait le lien entre les containers)
networks:
  frontend:
  backend:
