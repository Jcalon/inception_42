
version: '3'

services:

  nginx:

    container_name: nginx
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
#depends_on signifie que le container ne demarrera pas tant que l'autre n'est pas construit 
    depends_on:
      - wordpress
    ports:
      - "443:443"
    networks:
      - inception
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - wp-volume:/var/www/
    restart: always


  mariadb:

    container_name: mariadb
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
#On transfert nos infos secretes via args
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_ROOT: ${DB_ROOT}
    ports:
      - "3306:3306"
    networks:
      - inception
    volumes:
      - db-volume:/var/lib/mysql
    restart: always

  wordpress:

    container_name: wordpress
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      WP_NAME: ${WP_NAME}
      WP_ADMIN: ${WP_ADMIN}
      WP_ADMIN_PASS: ${WP_ADMIN_PASS}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_USER: ${WP_USER}
      WP_USER_PASS: ${WP_USER_PASS}
      WP_USER_EMAIL: ${WP_USER_EMAIL}
    depends_on:
      - mariadb
    networks:
      - inception
    volumes:
      - wp-volume:/var/www/
    restart: always

#Creation de partitions
volumes:

#Partition commune pour l'echange de donnees entre WP et nginx
  wp-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/wordpress

#Partition pour stocker la DB
  db-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/mariadb

#Creation de notre nom de docker-network pour y acceder (il fait le lien entre les containers)
networks:
    inception:
        driver: bridge